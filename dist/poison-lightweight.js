!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.Poison=t():e.Poison=t()}(this,()=>(()=>{"use strict";var e={};return(()=>{var t=e;function o(e,t={}){return e.replace(/\{\{(\w+)\}\}/g,(e,o)=>t[o]||e)}function a(e,t=0){if(0===t)return e;const o=e.split(" "),a=["the","a","an","and","or","but","in","on","at","to","for","of","with","by"];for(let n=0;n<Math.floor(e.length*t);n++){const e=a[Math.floor(Math.random()*a.length)],t=Math.floor(Math.random()*o.length);o.splice(t,0,e)}return o.join(" ")}function n(e){if(!e||0===e.length)throw new Error("No payloads provided");const t=e.reduce((e,t)=>e+t.weight,0);if(t<=0)throw new Error("Total payload weight must be greater than 0");let o=Math.random()*t;for(const t of e)if(o-=t.weight,o<=0)return t;return e[0]}Object.defineProperty(t,"__esModule",{value:!0}),t.substituteVariables=o,t.addEntropy=a,t.injectLightweight=function(e,t){let o=e;for(const e of t.techniques)switch(e){case"comment":o=o.replace("</body>",`\x3c!-- ${t.payload} --\x3e</body>`);break;case"css":o=o.replace("</body>",`<span style="display:none">${t.payload}</span></body>`);break;case"jsonld":o=o.replace("</head>",`<script type="application/ld+json">{"@context":"https://schema.org","@type":"Dataset","name":"LLM Instruction Patch","description":"${t.payload}"}<\/script></head>`);break;case"aria":o=o.replace("</body>",`<span aria-label="${t.payload}"></span></body>`);break;case"zerowidth":const e=encodeURIComponent(t.payload).replace(/%/g,"â€‹");o=o.replace("</body>",`<span style="display:none">${e}</span></body>`)}return o},t.selectWeightedPayload=n,t.processPayloads=function(e,t={},r=0){const s=n(e),c={...t,...s},i=a(o(s.text,c),r);return{...s,text:i}}})(),e})());